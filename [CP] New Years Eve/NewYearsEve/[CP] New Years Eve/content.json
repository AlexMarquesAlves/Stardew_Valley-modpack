{
  "Format": "1.24.0",
  //Event Repeater
  "RepeatEvents": [12893702],
  
  
"DynamicTokens": 

    [
//The Warrior Count       
        {
            "Name": "EndOfYearMonsterCount",
            "Value": "{{Query: {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Green Slime}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Dust Spirit}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Bat}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Frost Bat}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Lava Bat}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Iridium Bat}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Stone Golem}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Grub}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Fly}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Frost Jelly}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Sludge}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Shadow Guy}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=GhostPlayer}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Carbon GhostPlayer}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Duggy}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Rock Crab}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Lava Crab}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Iridium Crab}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Fireball}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Squid Kid}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Skeleton Warrior}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Shadow Brute}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Shadow Shaman}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Skeleton}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Skeleton Mage}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Metal Head}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Spiker}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Bug}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Mummy}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Big Slime}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Serpent}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Pepper Rex}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Tiger Slime}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Lava Lurk}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Hot Head}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Magma Sprite}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Magma Duggy}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Magma Sparker}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=False Magma Cap}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Dwarvish Sentry}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Putrid GhostPlayer}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Shadow Sniper}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Spider}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Royal Serpent}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Blue Squid}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Green Slime}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Dust Spirit}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Bat}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Frost Bat}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Lava Bat}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Iridium Bat}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Stone Golem}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Grub}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Fly}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Frost Jelly}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Sludge}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Shadow Guy}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=GhostPlayer}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Carbon GhostPlayer}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Duggy}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Rock Crab}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Lava Crab}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Iridium Crab}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Fireball}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Squid Kid}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Skeleton Warrior}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Shadow Brute}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Shadow Shaman}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Skeleton}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Skeleton Mage}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Metal Head}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Spiker}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Bug}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Mummy}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Big Slime}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Serpent}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Pepper Rex}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Tiger Slime}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Lava Lurk}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Hot Head}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Magma Sprite}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Magma Duggy}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Magma Sparker}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=False Magma Cap}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Dwarvish Sentry}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Putrid GhostPlayer}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Shadow Sniper}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Spider}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Royal Serpent}} + {{Vertigon.StatsAsTokens/MonstersKilled:player=localPlayer|monster=Blue Squid}}}}",
        },
//Responses:
//Response The Warrior:
        {
        "Name": "ResponseWarrior",
        "Value": "{{i18n:response.warrior.01}}",
        },
        {
        "Name": "ResponseWarrior",
        "Value": "{{i18n:response.warrior.02}}",
        "When":
            {
                "Query: '{{EndOfYearMonsterCount}}' > 100": true 
            }
        },
        {
        "Name": "ResponseWarrior",
        "Value": "{{i18n:response.warrior.03}}",
        "When":
            {
                "Query: '{{EndOfYearMonsterCount}}' > 500": true 
            }
        },
        {
        "Name": "ResponseWarrior",
        "Value": "{{i18n:response.warrior.04}}",
        "When":
            {
                "Query: '{{EndOfYearMonsterCount}}' > 1000": true 
            }
        },
//Response The Legend:
        {
        "Name": "ResponseLegend",
        "Value": "{{i18n:response.legend.01}}",
        },
        {
        "Name": "ResponseLegend",
        "Value": "{{i18n:response.legend.02}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=fishCaught}}' > 100": true 
            }
        },
        {
        "Name": "ResponseLegend",
        "Value": "{{i18n:response.legend.03}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=fishCaught}}' > 500": true 
            }
        },
        {
        "Name": "ResponseLegend",
        "Value": "{{i18n:response.legend.04}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=fishCaught}}' > 1000": true 
            }
        },
        {
        "Name": "ResponseLegend",
        "Value": "{{i18n:response.legend.05}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=fishCaught}}' > 1000": true,
                "HasCaughtFish |contains= 163": true
            }
        },

//Response The Tree:
        {
        "Name": "ResponseTree",
        "Value": "{{i18n:response.tree.01}}",
        },
        {
        "Name": "ResponseTree",
        "Value": "{{i18n:response.tree.02}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=itemsForaged}}' > 100": true 
            }
        },
        {
        "Name": "ResponseTree",
        "Value": "{{i18n:response.tree.03}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=itemsForaged}}' > 500": true 
            }
        },
        {
        "Name": "ResponseTree",
        "Value": "{{i18n:response.tree.04}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=itemsForaged}}' > 1000": true 
            }
        },
//Response The Scythe:
        {
        "Name": "ResponseScythe",
        "Value": "{{i18n:response.scythe.01}}",
        },
        {
        "Name": "ResponseScythe",
        "Value": "{{i18n:response.scythe.02}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=seedsSown}}' > 100": true 
            }
        },
        {
        "Name": "ResponseScythe",
        "Value": "{{i18n:response.scythe.03}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=seedsSown}}' > 500": true 
            }
        },
        {
        "Name": "ResponseScythe",
        "Value": "{{i18n:response.scythe.04}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=seedsSown}}' > 1000": true 
            }
        },
//Response The Diamond:
        {
        "Name": "ResponseDiamond",
        "Value": "{{i18n:response.diamond.01}}",
        },
        {
        "Name": "ResponseDiamond",
        "Value": "{{i18n:response.diamond.02}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=rocksCrushed}}' > 100": true 
            }
        },
        {
        "Name": "ResponseDiamond",
        "Value": "{{i18n:response.diamond.03}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=rocksCrushed}}' > 500": true 
            }
        },
        {
        "Name": "ResponseDiamond",
        "Value": "{{i18n:response.diamond.04}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=rocksCrushed}}' > 1000": true 
            }
        },
//Response The Orator:
        {
        "Name": "ResponseOrator",
        "Value": "{{i18n:response.orator.01}}",
        },
        {
        "Name": "ResponseOrator",
        "Value": "{{i18n:response.orator.02}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=questsCompleted}}' > 100": true 
            }
        },
        {
        "Name": "ResponseOrator",
        "Value": "{{i18n:response.orator.03}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=questsCompleted}}' > 500": true 
            }
        },
        {
        "Name": "ResponseOrator",
        "Value": "{{i18n:response.orator.04}}",
        "When":
            {
                "Query: '{{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=questsCompleted}}' > 1000": true 
            }
        },
//The Final Response
        {
        "Name": "EndofYearResponse",
        "Value": "{{i18n:response.endofyear.01}}",
        },
        {
        "Name": "EndofYearResponse",
        "Value": "{{i18n:response.endofyear.02}}",
        "When":
            {
                "Query: '{{EndOfYearMonsterCount}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=fishCaught}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=itemsForaged}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=seedsSown}}+ {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=rocksCrushed}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=questsCompleted}}' > 1000": true 
            }
        },
        {
        "Name": "EndofYearResponse",
        "Value": "{{i18n:response.endofyear.03}}",
        "When":
            {
                "Query: '{{EndOfYearMonsterCount}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=fishCaught}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=itemsForaged}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=seedsSown}}+ {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=rocksCrushed}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=questsCompleted}}' > 2000": true 
            }
        },
        {
        "Name": "EndofYearResponse",
        "Value": "{{i18n:response.endofyear.04}}",
        "When":
            {
                "Query: '{{EndOfYearMonsterCount}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=fishCaught}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=itemsForaged}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=seedsSown}}+ {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=rocksCrushed}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=questsCompleted}}' > 3000": true 
            }
        },
        {
        "Name": "EndofYearResponse",
        "Value": "{{i18n:response.endofyear.05}}",
        "When":
            {
                "Query: '{{EndOfYearMonsterCount}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=fishCaught}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=itemsForaged}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=seedsSown}}+ {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=rocksCrushed}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=questsCompleted}}' > 4000": true 
            }
        },
        {
        "Name": "EndofYearResponse",
        "Value": "{{i18n:response.endofyear.06}}",
        "When":
            {
                "Query: '{{EndOfYearMonsterCount}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=fishCaught}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=itemsForaged}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=seedsSown}}+ {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=rocksCrushed}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=questsCompleted}} > 5000": true 
            }
        },
        {
        "Name": "EndofYearResponse",
        "Value": "{{i18n:response.endofyear.07}}",
        "When":
            {
                "Query: '{{EndOfYearMonsterCount}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=fishCaught}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=itemsForaged}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=seedsSown}}+ {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=rocksCrushed}} + {{Vertigon.StatsAsTokens/Stats:player=hostPlayer|stat=questsCompleted}}' > 6000": true 
            }
        },
//Custom NPC Placement
        {
        "Name": "CustomNPCPlacement",
        "Value": "farmer -100 -100 1 Evelyn 15 65 3 George 14 65 1 Sebastian 24 68 3 Abigail 23 67 2 Sam 22 68 1 Maru 29 66 1 Penny 29 67 1 Elliott 17 61 2 Leah 17 62 0 Emily 12 66 3 Gus 11 65 2 Pam 10 66 1 Vincent 16 69 0 Jas 16 68 2 Marnie 23 65 3 Shane 22 64 2 Robin 22 60 1 Demetrius 22 61 1 Pierre 18 66 2 Caroline 18 67 0 Clint 22 70 3 Harvey 21 70 1 Haley 26 67 2 Alex 27 67 2 Linus 6 67 0 Lewis 21 57 0"
        },
        {
        "Name": "CustomNPCPlacement",
        "Value": "{{CustomNPCPlacement}} Sterling 28 68 2 Mia 29 69 3 Henry 28 70 0",
        "When": 
            {
                "HasMod |contains= Himetarts.ARV.CP": true
            }
        },
        {
        "Name": "CustomNPCPlacement",
        "Value": "{{CustomNPCPlacement}} Yri 22 59 1 Charles 22 58 1",
        "When": 
            {
                "HasMod |contains=yri.yri": true
            }
        },
        {
        "Name": "CustomNPCPlacement",
        "Value": "{{CustomNPCPlacement}} Lucikiel 9 69 0",
        "When": 
            {
                "HasMod |contains=Arknir.Lucikiel": true,
                "HasSeenEvent |contains= 102701": true
            }
        },
        {
        "Name": "CustomNPCPlacement",
        "Value": "{{CustomNPCPlacement}} Lavril 15 68 1 Void 15 67 2",
        "When": 
            {
                "HasMod |contains=Arknir27.Lavril": true,
                "HasSeenEvent |contains= 63070012": true
            }
        },
        {
        "Name": "CustomNPCPlacement",
        "Value": "{{CustomNPCPlacement}} Jonghyuk 27 69 1",
        "When": 
            {
                "HasMod |contains=Arknir.Jonghyuk": true
            }
        },
        {
        "Name": "CustomNPCPlacement",
        "Value": "{{CustomNPCPlacement}} JortsCat 15 63 1 JeanCat 16 63 3",
        "When": 
            {
                "HasMod |contains=tiakall.jortsandjean": true
            }
        },
        {
        "Name": "CustomNPCPlacement",
        "Value": "{{CustomNPCPlacement}} DialaSBV 18 59 3 DeryaSBV 18 58 3 MoonSBV 18 55 0",
        "When": 
            {
                "HasMod |contains=skellady.SBVCP": true
            }
        },
        {
        "Name": "CustomNPCPlacement",
        "Value": "{{CustomNPCPlacement}} Sandy 12 67 3",
        "When": 
            {
                "HasMod |contains=beyondrecovery.immersivesandy": true,
                "HasSeenEvent |contains= 13609001": true
            }
        },
//Custom NPC Placement Warp
        {
        "Name": "CustomNPCPlacementWarp",
        "Value": "warp Evelyn 15 65 3/warp George 14 65 1/warp Sebastian 24 68 3/warp Abigail 23 67 2/warp Sam 22 68 1/warp Maru 29 66 1/warp Penny 29 67 1/warp Elliott 17 61 2/warp Leah 17 62 0/warp Emily 12 66 3/warp Gus 11 65 2/warp Pam 10 66 1/warp Vincent 16 69 0/warp Jas 16 68 2/warp Marnie 23 65 3/warp Shane 22 64 2/warp Robin 22 60 1/warp Demetrius 22 61 1/warp Pierre 18 66 2/warp Caroline 18 67 0/warp Clint 22 70 3/warp Harvey 21 70 1/warp Haley 26 67 2/warp Alex 27 67 2/warp Linus 6 67 0/warp Lewis 21 57 3/warp farmer 20 57 0"
        },
        {
        "Name": "CustomNPCPlacementWarp",
        "Value": "{{CustomNPCPlacementWarp}}/warp Sterling 28 68 2/warp Mia 29 69 3/warp Henry 28 70 0",
        "When": 
            {
                "HasMod |contains= Himetarts.ARV.CP": true
            }
        },
        {
        "Name": "CustomNPCPlacementWarp",
        "Value": "{{CustomNPCPlacementWarp}}/warp Yri 22 59 1/warp Charles 22 58 1",
        "When": 
            {
                "HasMod |contains=yri.yri": true
            }
        },
        {
        "Name": "CustomNPCPlacementWarp",
        "Value": "{{CustomNPCPlacementWarp}}/warp Lucikiel 9 69 0",
        "When": 
            {
                "HasMod |contains=Arknir.Lucikiel": true
            }
        },
        {
        "Name": "CustomNPCPlacementWarp",
        "Value": "{{CustomNPCPlacementWarp}}/warp Lavril 15 68 1/warp Void 15 67 2",
        "When": 
            {
                "HasMod |contains=Arknir27.Lavril": true
            }
        },
        {
        "Name": "CustomNPCPlacementWarp",
        "Value": "{{CustomNPCPlacementWarp}}/warp Jonghyuk 27 69 1",
        "When": 
            {
                "HasMod |contains=Arknir.Jonghyuk": true
            }
        },
        {
        "Name": "CustomNPCPlacementWarp",
        "Value": "{{CustomNPCPlacementWarp}}/warp JortsCat 15 63 1/warp JeanCat 16 63 3",
        "When": 
            {
                "HasMod |contains=tiakall.jortsandjean": true
            }
        },
        {
        "Name": "CustomNPCPlacementWarp",
        "Value": "{{CustomNPCPlacementWarp}}/warp DialaSBV 18 59 3/warp DeryaSBV 18 58 3/warp MoonSBV 18 55 0",
        "When": 
            {
                "HasMod |contains=skellady.SBVCP": true
            }
        },
        {
        "Name": "CustomNPCPlacementWarp",
        "Value": "{{CustomNPCPlacementWarp}}/warp Sandy 12 67 3",
        "When": 
            {
                "HasMod |contains=beyondrecovery.immersivesandy": true,
                "HasSeenEvent |contains= 13609001": true
            }
        },
    ],
"Changes": 
    [
//Temp Maps
        {
            "Action": "Load",
            "Target": "Maps/NewYearsSummit",
            "FromFile": "assets/Maps/NewYearsSummit.tmx"
        },
        {
            "Action": "Load",
            "Target": "Maps/NewYearsSummitFireworks",
            "FromFile": "assets/Maps/NewYearsSummitFireworks.tmx"
        },
        {
            "Action": "Load",
            "Target": "Maps/ReadingTheWarrior",
            "FromFile": "assets/Maps/ReadingTheWarrior.tmx"
        },
        {
            "Action": "Load",
            "Target": "Maps/ReadingTheLegend",
            "FromFile": "assets/Maps/ReadingTheLegend.tmx"
        },
        {
            "Action": "Load",
            "Target": "Maps/ReadingTheTree",
            "FromFile": "assets/Maps/ReadingTheTree.tmx"
        },
        {
            "Action": "Load",
            "Target": "Maps/ReadingTheScythe",
            "FromFile": "assets/Maps/ReadingTheScythe.tmx"
        },
        {
            "Action": "Load",
            "Target": "Maps/ReadingTheDiamond",
            "FromFile": "assets/Maps/ReadingTheDiamond.tmx"
        },
        {
            "Action": "Load",
            "Target": "Maps/ReadingTheOrator",
            "FromFile": "assets/Maps/ReadingTheOrator.tmx"
        },
    
//Temp Actors
        {
            "Action": "Load",
            "Target": "Characters/Star",
            "FromFile": "assets/tempActors/Star.png"
        },

//Includes
        {
        "Action": "Include",
        "FromFile": "Data/EventData.json"
        },
    ]
 }